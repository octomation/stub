name: Continuous delivery

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/cd.docker.yml'
      - 'traefik/*'

  schedule:
    - cron: 0 7 1 * * # at 07:00 on day-of-month 1, UTC

  workflow_dispatch:
    inputs:
      reason:
        description: The reason for dispatching it manually.
        type: string
        default: manual healthcheck
        required: true

concurrency:
  group: packages
  cancel-in-progress: true

jobs:
  publish:
    name: Publishing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Define metadata for images
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/octomation/stub
          tags: |
            type=raw,value=latest
      - name: Build and push images
        uses: docker/build-push-action@v4
        with:
          context: traefik
          file: traefik/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  notify:
    name: Notifying
    needs: [ publish ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Send notification
        uses: ./.github/actions/notify
        continue-on-error: true
        with:
          emoji: üê≥
          channel: ${{ secrets.SLACK_WEBHOOK }}
          success: ${{ ! contains(needs.*.result, 'failure') }}
